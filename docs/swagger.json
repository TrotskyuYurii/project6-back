{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "An application with registration and login functionality that allows you to store information about the water you drink.\n"
  },
  "servers": [
    {
      "url": "<https://project6-back.onrender.com:3000>"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/users/registered-users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all registered users",
        "operationId": "getAllRegisteredUsers",
        "description": "Get information about all registered users in application",
        "security": [],
        "responses": {
          "200": {
            "description": "Get all registered users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get current user data!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "totalRegisteredUsers",
                        "users"
                      ],
                      "properties": {
                        "totalRegisteredUsers": {
                          "type": "number",
                          "example": 13
                        },
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email is already in use!"
                    },
                    "errors": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "your access token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Wrong email or password!"
                    },
                    "errors": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Ability to refresh your session if your access token has expired",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh user session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "your access token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user data",
        "operationId": "updateUser",
        "description": "You can provide a payload to update your information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "description": "User's id",
                    "type": "string",
                    "example": "66785ee7009eeec396e0e546"
                  },
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string"
                  },
                  "weight": {
                    "description": "User's weight",
                    "type": "number",
                    "example": 73
                  },
                  "sportTime": {
                    "description": "The time of active participation in sports",
                    "type": "number",
                    "example": 3
                  },
                  "waterNorma": {
                    "description": "Amount of water consumed by the user per day",
                    "type": "number",
                    "example": 2.5
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ]
                  },
                  "avatar": {
                    "description": "Link to user's avatar",
                    "type": "string",
                    "example": "https://some-avatar-url.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update user data!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/current-user-data": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user data",
        "operationId": "getCurrentUserData",
        "description": "Get information about the current registered user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get current user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get current user data!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Log out user",
        "operationId": "logoutUser",
        "description": "Log out of your account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfuly log out"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/send-reset-email": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Notification of password reset",
        "operationId": "sendResetEmail",
        "description": "Enter your email to receive a reset password message",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get reset password message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Problems with sending a message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send the email, please try again later."
                    },
                    "errors": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "You can enter a new password. The token will be substituted on the frontend",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "token"
                ],
                "properties": {
                  "password": {
                    "description": "Your new password",
                    "type": "string"
                  },
                  "token": {
                    "description": "Token from the link that was in the password reset message",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully changed password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully changed!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/add": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water entry",
        "operationId": "addWaterEntry",
        "description": "Adds a new water entry to the system",
        "requestBody": {
          "description": "Water entry to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water entry added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterSchema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/edit/{waterId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Edit water entry by ID",
        "operationId": "editWaterEntryById",
        "description": "Edits an existing water entry by ID",
        "parameters": [
          {
            "name": "waterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Water entry to edit",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWaterSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water entry edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditWaterSchema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/remove/{waterId}": {
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water entry by ID",
        "operationId": "deleteWaterEntryById",
        "description": "Deletes an existing water entry by ID",
        "parameters": [
          {
            "name": "waterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Water entry deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get daily water entries",
        "operationId": "getDailyWaterEntries",
        "description": "Retrieves water entries for a specific day",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
              "example": "11-11-2024"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Daily water entries retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddWaterSchema"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/month/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get monthly water entries",
        "operationId": "getMonthlyWaterEntries",
        "description": "Retrieves water entries for a specific month",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}-\\d{2}-\\d{4}$",
              "example": "11-11-2024"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly water entries retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddWaterSchema"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Water": {
        "$ref": "#/components/schemas/water"
      },
      "user": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "667814c7c6397783a1a5ea1d"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe",
            "default": "Guest"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "john@example.com"
          },
          "password": {
            "description": "User's password",
            "type": "string"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 70,
            "default": 0
          },
          "sportTime": {
            "description": "The time of active participation in sports",
            "type": "number",
            "example": 2,
            "default": 0
          },
          "waterNorma": {
            "description": "Amount of water consumed by the user per day",
            "type": "number",
            "example": 2,
            "default": 0
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "default": "woman"
          },
          "avatar": {
            "description": "Link to user's avatar",
            "type": "string",
            "example": "https://some-avatar-url.png"
          }
        }
      },
      "AddWaterSchema": {
        "type": "object",
        "required": [
          "date",
          "amount",
          "time"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of water consumption in DD-MM-YYYY format"
          },
          "amount": {
            "type": "number",
            "minimum": 50,
            "maximum": 1500,
            "description": "Amount of water consumed in milliliters"
          },
          "time": {
            "type": "string",
            "format": "time",
            "description": "Time of water consumption in HH:mm format"
          }
        }
      },
      "EditWaterSchema": {
        "type": "object",
        "required": [
          "date",
          "amount",
          "time"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of water consumption in DD-MM-YYYY format"
          },
          "amount": {
            "type": "number",
            "minimum": 50,
            "maximum": 1500,
            "description": "Amount of water consumed in milliliters"
          },
          "time": {
            "type": "string",
            "format": "time",
            "description": "Time of water consumption in HH:mm format"
          }
        }
      },
      "water": {
        "components": {
          "schemas": {
            "AddWaterSchema": {
              "type": "object",
              "required": [
                "date",
                "amount",
                "time"
              ],
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of water consumption in DD-MM-YYYY format"
                },
                "amount": {
                  "type": "number",
                  "minimum": 50,
                  "maximum": 1500,
                  "description": "Amount of water consumed in milliliters"
                },
                "time": {
                  "type": "string",
                  "format": "time",
                  "description": "Time of water consumption in HH:mm format"
                }
              }
            },
            "EditWaterSchema": {
              "type": "object",
              "required": [
                "date",
                "amount",
                "time"
              ],
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of water consumption in DD-MM-YYYY format"
                },
                "amount": {
                  "type": "number",
                  "minimum": 50,
                  "maximum": 1500,
                  "description": "Amount of water consumed in milliliters"
                },
                "time": {
                  "type": "string",
                  "format": "time",
                  "description": "Time of water consumption in HH:mm format"
                }
              }
            },
            "DayParamSchema": {
              "type": "object",
              "required": [
                "date"
              ],
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date for which to retrieve water consumption data in DD-MM-YYYY format"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequest"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "errors"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                },
                "errors": {
                  "type": "array",
                  "example": []
                }
              }
            }
          }
        }
      }
    }
  }
}